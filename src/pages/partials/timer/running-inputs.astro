---
import { eq } from "drizzle-orm";
import { db } from "../../../lib/drizzle";
import * as schema from "../../../lib/schema";

export const partial = true;

const session = await Astro.locals.auth.validate();
const user_id = session.user.userId;

const data = await Astro.request.formData();
const description = data.get("description") as string;
const billable_rate = data.get("billable_rate") as string;
const project_id = data.get("project_id") as string;
console.log({ project_id });

const projects = await db.query.project.findMany({
  where: eq(schema.project.userId, user_id)
});

let response = await db.insert(schema.entry)
  .values({
    description,
    billable_rate: (billable_rate !== "" ? Number.parseFloat(billable_rate) : 0),
    userId: user_id,
    projectId: Number.parseInt(project_id)
  })
  .returning();



console.log("WAHHHHH", { response });

const entry_id = response[0].id;
---

<div
  id="timer_inputs"
  hx-trigger="endTimer from:body"
  hx-post="/partials/timer/reset-inputs"
  hx-swap="outerHTML"
  hx-include="[name='entry_id']"
  class="flex gap-8 items-center border border-red-400"
>
  <input name="entry_id" type="hidden" value={entry_id} />
  <input 
    name="description"
    type="text"
    placeholder="designing prototype..."
    value={description}
    hx-trigger="keyup changed delay:1s"
    hx-post="/partials/timer/update-running-description"
    hx-swap="outerHTML"
    hx-target="this"
    hx-include="[name='description'], [name='entry_id']"
  />

  <label for="billable_rate">
    $
    <input
      name="billable_rate"
      type="number"
      value={billable_rate}
      hx-trigger="keyup changed delay:1s"
      hx-post="/partials/timer/update-running-rate"
      hx-swap="outerHTML"
      hx-target="this"
      hx-include="[name='billable_rate'], [name='entry_id']"
    />
    / hr
  </label>

  <select 
    id="project_select"
  >
    <option value={null} selected>
      -- Select Project --
    </option>
    {
      projects.map((p) => 
        <option id={`project_${p.id}`} value={p.id} selected={p.id === Number.parseInt(project_id)}>
          { p.name }
        </option>
      )
    }
    <option 
      id="new_project_option"
      value="new_project"
    >
      + New Project
    </option>
  </select>
</div>
