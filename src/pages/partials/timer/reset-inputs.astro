---
import { eq } from "drizzle-orm";
import { db } from "../../../lib/drizzle";
import * as schema from "../../../lib/schema";

export const partial = true;

// get all projects for select input
const session = await Astro.locals.auth.validate();
const user_id = session.user.userId;

const projects = await db.query.project.findMany({
  where: eq(schema.project.userId, user_id)
});

const data = await Astro.request.formData();
const entry_id = data.get("entry_id") as string | null;
if (entry_id) {
  // end if given current entry's id
  const response = await db.update(schema.entry)
    .set({
      end_time: new Date
    })
    .where(eq(schema.entry.id, Number.parseInt(entry_id)))
    .returning();

  // TODO: refactor to only have 1 database call
  await db.update(schema.entry)
    .set({ 
      duration: (
        new Date().valueOf() - (response[0].start_time?.valueOf() ?? 0)
      )
    })
    .where(eq(schema.entry.id, Number.parseInt(entry_id)));
}

---

<div
  id="timer_inputs"
  hx-trigger="runTimer from:body"
  hx-post="/partials/timer/running-inputs"
  hx-swap="outerHTML"
  hx-include="[name='description'], [name='billable_rate'], [name='project_id']"
  class="flex gap-8 items-center border border-blue-400"
>
  <input 
    name="description"
    type="text"
    placeholder="designing prototype..."
  />

  <label for="billable_rate">
    $
    <input
      name="billable_rate"
      type="number"
      min={0}
    />
    / hr
  </label>

  <select 
    id="project_select"
    name="project_id"
  >
    <option value={null} selected>
      -- Select Project --
    </option>
    {
      projects.map((p) => 
        <option id={`project_${p.id}`} value={p.id}>
          { p.name }
        </option>
      )
    }
    <option 
      id="new_project_option"
      value="new_project"
    >
      + New Project
    </option>
  </select>
</div>


<script is:inline>
  const project_select = document.getElementById("project_select");

  project_select.addEventListener("change", function() {
    if (this.value === "new_project") {
      const new_project = prompt("Create a new project");
      if (new_project === null) { this.value = ""; }
      else {
        // call htmx on select to create option
        htmx.ajax("POST", "/partials/timer/update-new-project", {
          target: "#new_project_option",
          swap: "outerHTML",
          values: { new_project }
        });
      }
    }
  });
</script>
