---
import * as schema from "../lib/schema";

import dayjs from "dayjs";
import duration from "dayjs/plugin/duration";
import relativeTime from "dayjs/plugin/relativeTime";
import localizedFormat from "dayjs/plugin/localizedFormat";

dayjs.extend(duration);
dayjs.extend(relativeTime);
dayjs.extend(localizedFormat);

// initial entry and projects db query from page pass through via props
const { entry, projects } = Astro.props
---

<li class="flex justify-between items-center">
  <div class="flex gap-4 items-center">
    <input
      name={`description_${entry.id}`}
      type="text"
      value={entry.description}
      placeholder="Add description"
      hx-trigger="keyup changed delay:1s"
      hx-post={`/partials/entry-table/update-entry-description?id=${entry.id}`}
      hx-vals={`[name='description_${entry.id}']`}
      hx-swap="outerHTML"
      hx-target="this"
      class="border px-4 py-2"
    />
    <select 
      id={`project_select_${entry.id}`}
      name={`project_select_${entry.id}`}
      hx-post="/partials/entry-table/update-entry-project"
      hx-swap="outerHTML"
      hx-target="this"
      class="peer h-full w-fit border border-blue-gray-200 bg-transparent px-4 py-2 text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 empty:!bg-gray-900 focus:border-neutral-400 focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
    >
      <option value={null} selected>
        -- Select Project --
      </option>
      {
        projects.map((p : typeof schema.project.$inferSelect) => 
          <option id={`project_${p.id}`} value={p.id} selected={p.id === entry.projectId}>
            { p.name }
          </option>
        )
      }
      <option 
        id={`new_project_${entry.id}`}
        value="new_project"
      >
        + New Project
      </option>
    </select>
    <label for={`billable_rate_${entry.id}`}>
      $
      <input
        name={`billable_rate_${entry.id}`}
        type="number"
        min={0}
        value={entry.billable_rate ?? 0}
        hx-trigger="keyup changed delay:1s"
        hx-post={`/partials/entry-table/update-entry-rate?id=${entry.id}`}
        hx-vals={`[name='billable_rate_${entry.id}']`}
        hx-swap="outerHTML"
        hx-target="this"
        class="border-b border-neutral-300 w-fit max-w-24 focus:border-neutral-400"
      />
      / hr
    </label>
  </div>

  <div class="flex gap-4 items-center">
    <!-- TODO: implement modal to update time -->
    <button class="tabular-nums transition hover:scale-105 active:scale-95 hover:bg-neutral-200 rounded-xl px-4 py-2">
      {dayjs.duration(entry.duration ?? 0, "milliseconds").format('HH:mm:ss')}
    </button>

    <!-- TODO: implement modal for extra options (delete) -->
    <button class="transition hover:scale-110 active:scale-90 p-2 hover:bg-neutral-200 rounded-full"> 
      <svg viewBox="0 0 32 32" width="16" height="16" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M19 16a3 3 0 0 1-3 3 3 3 0 0 1-3-3 3 3 0 0 1 3-3 3 3 0 0 1 3 3zm0 13a3 3 0 0 1-3 3 3 3 0 0 1-3-3 3 3 0 0 1 3-3 3 3 0 0 1 3 3zm0-26a3 3 0 0 1-3 3 3 3 0 0 1-3-3 3 3 0 0 1 3-3 3 3 0 0 1 3 3z" fill="#000000"></path></g></svg>
    </button>
  </div>
</li>
